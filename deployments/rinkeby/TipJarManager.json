{
  "address": "0xc4EDDf3ba2D9Ba5Df935C29Cb2F4EA6AD209e5D4",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "delayType",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "oldDelay",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newDelay",
          "type": "uint256"
        }
      ],
      "name": "DelayChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "approver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newFee",
          "type": "uint32"
        }
      ],
      "name": "FeeApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "approver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newCollector",
          "type": "address"
        }
      ],
      "name": "FeeCollectorApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newCollector",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "proposalID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "FeeCollectorProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newFee",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "proposalID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "FeeProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "approver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "miner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "splitTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "splitPct",
          "type": "uint32"
        }
      ],
      "name": "MinerSplitApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "miner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "splitTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "splitPct",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "proposalID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "MinerSplitProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldTimelock",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newTimelock",
          "type": "address"
        }
      ],
      "name": "TimelockChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldTipJar",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newTipJar",
          "type": "address"
        }
      ],
      "name": "TipJarChanged",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "approveNewAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newDelay",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "approveNewCriticalDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "newFee",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "approveNewFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newFeeCollector",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "approveNewFeeCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "splitTo",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "splitPct",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "approveNewMinerSplit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "approveNewProxyAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newDelay",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "approveNewRegularDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTimelock",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "approveNewTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTipJar",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "approveNewTipJar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "approveUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "approveUpgradeAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "cancelProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "predecessor",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "datas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "predecessor",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "createProposalBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "criticalDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "predecessor",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "datas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "predecessor",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "executeProposalBatch",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProxyAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProxyImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tipJar",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_timelock",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_criticalDelay",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_regularDelay",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "proposeNewAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newDelay",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "proposeNewCriticalDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "newFee",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "proposeNewFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newFeeCollector",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "proposeNewFeeCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "splitTo",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "splitPct",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "proposeNewMinerSplit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "proposeNewProxyAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newDelay",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "proposeNewRegularDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTimelock",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "proposeNewTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTipJar",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "proposeNewTipJar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "proposeUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "proposeUpgradeAndCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "regularDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newDelay",
          "type": "uint256"
        }
      ],
      "name": "setCriticalDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "setProxyAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newDelay",
          "type": "uint256"
        }
      ],
      "name": "setRegularDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newTimelock",
          "type": "address"
        }
      ],
      "name": "setTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTipJar",
          "type": "address"
        }
      ],
      "name": "setTipJar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "contract ITimelockController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tipJar",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x5df528d07b60f17821af38566b11fa78acb0d90e20fc2b790d38a6cfb0eaea2d",
  "receipt": {
    "to": null,
    "from": "0x4F8f512Dab59F227EA70B1D8A0044aFa95CC80C3",
    "contractAddress": "0xc4EDDf3ba2D9Ba5Df935C29Cb2F4EA6AD209e5D4",
    "transactionIndex": 6,
    "gasUsed": "2262839",
    "logsBloom": "0x
    "blockHash": "0xdbb24d47a91efa6a9c8be525eeddd8f4f94e4c5b567933dd4794c6fb2bafc275",
    "transactionHash": "0x5df528d07b60f17821af38566b11fa78acb0d90e20fc2b790d38a6cfb0eaea2d",
    "logs": [
      {
        "transactionIndex": 6,
        "blockNumber": 8380833,
        "transactionHash": "0x5df528d07b60f17821af38566b11fa78acb0d90e20fc2b790d38a6cfb0eaea2d",
        "address": "0xc4EDDf3ba2D9Ba5Df935C29Cb2F4EA6AD209e5D4",
        "topics": [
          "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004f8f512dab59f227ea70b1d8a0044afa95cc80c3"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0xdbb24d47a91efa6a9c8be525eeddd8f4f94e4c5b567933dd4794c6fb2bafc275"
      }
    ],
    "blockNumber": 8380833,
    "cumulativeGasUsed": "2401566",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "3b29f57f2c1333d49f6f293a8c3b8ae9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"delayType\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldDelay\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newDelay\",\"type\":\"uint256\"}],\"name\":\"DelayChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newFee\",\"type\":\"uint32\"}],\"name\":\"FeeApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newCollector\",\"type\":\"address\"}],\"name\":\"FeeCollectorApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newCollector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"proposalID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"FeeCollectorProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newFee\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"proposalID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"FeeProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"miner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"splitTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"splitPct\",\"type\":\"uint32\"}],\"name\":\"MinerSplitApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"miner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"splitTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"splitPct\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"proposalID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"MinerSplitProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldTimelock\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTimelock\",\"type\":\"address\"}],\"name\":\"TimelockChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldTipJar\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTipJar\",\"type\":\"address\"}],\"name\":\"TipJarChanged\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"approveNewAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDelay\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"approveNewCriticalDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"newFee\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"approveNewFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeCollector\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"approveNewFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"splitTo\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"splitPct\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"approveNewMinerSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"approveNewProxyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDelay\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"approveNewRegularDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTimelock\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"approveNewTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTipJar\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"approveNewTipJar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"approveUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"approveUpgradeAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"cancelProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"predecessor\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"createProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"datas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"predecessor\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"createProposalBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"criticalDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"predecessor\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"datas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"predecessor\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"executeProposalBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProxyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProxyImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tipJar\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_timelock\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_criticalDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_regularDelay\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"proposeNewAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDelay\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"proposeNewCriticalDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"newFee\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"proposeNewFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeCollector\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"proposeNewFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"splitTo\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"splitPct\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"proposeNewMinerSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"proposeNewProxyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDelay\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"proposeNewRegularDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTimelock\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"proposeNewTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTipJar\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"proposeNewTipJar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"proposeUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"proposeUpgradeAndCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"regularDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDelay\",\"type\":\"uint256\"}],\"name\":\"setCriticalDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"setProxyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDelay\",\"type\":\"uint256\"}],\"name\":\"setRegularDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newTimelock\",\"type\":\"address\"}],\"name\":\"setTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTipJar\",\"type\":\"address\"}],\"name\":\"setTipJar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"contract ITimelockController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tipJar\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Responsible for enacting decisions related to sensitive TipJar parameters Decisions are made via a timelock contract\",\"kind\":\"dev\",\"methods\":{\"approveNewAdmin(address,bytes32)\":{\"params\":{\"newAdmin\":\"new admin address\",\"salt\":\"salt\"}},\"approveNewCriticalDelay(uint256,bytes32)\":{\"params\":{\"newDelay\":\"new delay time\",\"salt\":\"salt\"}},\"approveNewFee(uint32,bytes32)\":{\"params\":{\"newFee\":\"New fee\",\"salt\":\"salt\"}},\"approveNewFeeCollector(address,bytes32)\":{\"params\":{\"newFeeCollector\":\"New fee collector\",\"salt\":\"salt\"}},\"approveNewMinerSplit(address,address,uint32,bytes32)\":{\"params\":{\"minerAddress\":\"Address of miner\",\"salt\":\"salt\",\"splitPct\":\"% of tip that splitTo receives\",\"splitTo\":\"Address that receives split\"}},\"approveNewProxyAdmin(address,bytes32)\":{\"params\":{\"newAdmin\":\"new admin address\",\"salt\":\"salt\"}},\"approveNewRegularDelay(uint256,bytes32)\":{\"params\":{\"newDelay\":\"new delay time\",\"salt\":\"salt\"}},\"approveNewTimelock(address,bytes32)\":{\"params\":{\"newTimelock\":\"new timelock address\",\"salt\":\"salt\"}},\"approveNewTipJar(address,bytes32)\":{\"params\":{\"newTipJar\":\"new tip jar address\",\"salt\":\"salt\"}},\"approveUpgrade(address,bytes32)\":{\"params\":{\"newImplementation\":\"new implementation address\",\"salt\":\"salt\"}},\"approveUpgradeAndCall(address,bytes,uint256,bytes32)\":{\"params\":{\"data\":\"Bytes-encoded function to call\",\"newImplementation\":\"new implementation address\",\"salt\":\"salt\",\"value\":\"Amount of ETH to send on call\"}},\"cancelProposal(bytes32)\":{\"params\":{\"id\":\"ID of proposal\"}},\"createProposal(address,uint256,bytes,bytes32,bytes32)\":{\"params\":{\"data\":\"function call bytes\",\"predecessor\":\"predecessor function call\",\"salt\":\"salt used in proposal\",\"target\":\"target address\",\"value\":\"ETH value\"}},\"createProposalBatch(address[],uint256[],bytes[],bytes32,bytes32)\":{\"params\":{\"datas\":\"function call bytes\",\"predecessor\":\"predecessor function call\",\"salt\":\"salt used in proposal\",\"targets\":\"target address\",\"values\":\"ETH value\"}},\"executeProposal(address,uint256,bytes,bytes32,bytes32)\":{\"params\":{\"data\":\"function call bytes\",\"predecessor\":\"predecessor function call\",\"salt\":\"salt used in proposal\",\"target\":\"target address\",\"value\":\"ETH value\"}},\"executeProposalBatch(address[],uint256[],bytes[],bytes32,bytes32)\":{\"params\":{\"datas\":\"function call bytes\",\"predecessor\":\"predecessor function call\",\"salt\":\"salt used in proposal\",\"targets\":\"target address\",\"values\":\"ETH value\"}},\"initialize(address,address,address,uint256,uint256)\":{\"params\":{\"_admin\":\"Admin address\",\"_timelock\":\"TimelockController contract address\",\"_tipJar\":\"TipJar proxy contract address\"}},\"proposeNewAdmin(address,bytes32)\":{\"params\":{\"newAdmin\":\"new admin address\",\"salt\":\"salt\"}},\"proposeNewCriticalDelay(uint256,bytes32)\":{\"params\":{\"newDelay\":\"new delay time\",\"salt\":\"salt\"}},\"proposeNewFee(uint32,bytes32)\":{\"params\":{\"newFee\":\"New fee\",\"salt\":\"salt\"}},\"proposeNewFeeCollector(address,bytes32)\":{\"params\":{\"newFeeCollector\":\"New fee collector\",\"salt\":\"salt\"}},\"proposeNewMinerSplit(address,address,uint32,bytes32)\":{\"params\":{\"minerAddress\":\"Address of miner\",\"salt\":\"salt\",\"splitPct\":\"% of tip that splitTo receives\",\"splitTo\":\"Address that receives split\"}},\"proposeNewProxyAdmin(address,bytes32)\":{\"params\":{\"newAdmin\":\"new admin address\",\"salt\":\"salt\"}},\"proposeNewRegularDelay(uint256,bytes32)\":{\"params\":{\"newDelay\":\"new delay time\",\"salt\":\"salt\"}},\"proposeNewTimelock(address,bytes32)\":{\"params\":{\"newTimelock\":\"new timelock address\",\"salt\":\"salt\"}},\"proposeNewTipJar(address,bytes32)\":{\"params\":{\"newTipJar\":\"new tip jar address\",\"salt\":\"salt\"}},\"proposeUpgrade(address,bytes32)\":{\"params\":{\"newImplementation\":\"new implementation address\",\"salt\":\"salt\"}},\"proposeUpgradeAndCall(address,bytes,uint256,bytes32)\":{\"params\":{\"data\":\"Bytes-encoded function to call\",\"newImplementation\":\"new implementation address\",\"salt\":\"salt\",\"value\":\"Amount of ETH to send on call\"}},\"setAdmin(address)\":{\"details\":\"Can only be executed by Timelock contract\",\"params\":{\"newAdmin\":\"new admin address\"}},\"setCriticalDelay(uint256)\":{\"details\":\"Can only be executed by Timelock contract\",\"params\":{\"newDelay\":\"new delay time\"}},\"setProxyAdmin(address)\":{\"params\":{\"newAdmin\":\"new admin address\"}},\"setRegularDelay(uint256)\":{\"details\":\"Can only be executed by Timelock contract\",\"params\":{\"newDelay\":\"new delay time\"}},\"setTimelock(address)\":{\"details\":\"Can only be executed by Timelock contract or anyone if timelock has not yet been set\",\"params\":{\"newTimelock\":\"new timelock address\"}},\"setTipJar(address)\":{\"details\":\"Can only be executed by Timelock contract\",\"params\":{\"newTipJar\":\"new tip jar address\"}},\"upgrade(address)\":{\"params\":{\"newImplementation\":\"new implementation address\"}},\"upgradeAndCall(address,bytes)\":{\"params\":{\"data\":\"Bytes-encoded function to call\",\"newImplementation\":\"new implementation address\"}}},\"title\":\"TipJarManager\",\"version\":1},\"userdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"notice\":\"New admin event\"},\"DelayChanged(string,uint256,uint256)\":{\"notice\":\"New delay event\"},\"FeeApproval(address,uint32)\":{\"notice\":\"Fee Approval event\"},\"FeeCollectorApproval(address,address)\":{\"notice\":\"Fee Collector Approval event\"},\"FeeCollectorProposal(address,address,uint256,bytes32,bytes32)\":{\"notice\":\"Fee Collector Proposal event\"},\"FeeProposal(address,uint32,uint256,bytes32,bytes32)\":{\"notice\":\"Fee Proposal event\"},\"MinerSplitApproval(address,address,address,uint32)\":{\"notice\":\"Miner Split Approval event\"},\"MinerSplitProposal(address,address,address,uint32,uint256,bytes32,bytes32)\":{\"notice\":\"Miner Split Proposal event\"},\"TimelockChanged(address,address)\":{\"notice\":\"New timelock event\"},\"TipJarChanged(address,address)\":{\"notice\":\"New tip jar event\"}},\"kind\":\"user\",\"methods\":{\"admin()\":{\"notice\":\"TipJarManager admin\"},\"approveNewAdmin(address,bytes32)\":{\"notice\":\"Approve new admin for this contract\"},\"approveNewCriticalDelay(uint256,bytes32)\":{\"notice\":\"Approve new critical delay for this contract\"},\"approveNewFee(uint32,bytes32)\":{\"notice\":\"Approve a new network fee\"},\"approveNewFeeCollector(address,bytes32)\":{\"notice\":\"Approve a new fee collector\"},\"approveNewMinerSplit(address,address,uint32,bytes32)\":{\"notice\":\"Approve a new miner split\"},\"approveNewProxyAdmin(address,bytes32)\":{\"notice\":\"Approve new admin for TipJar proxy contract\"},\"approveNewRegularDelay(uint256,bytes32)\":{\"notice\":\"Approve new regular delay for this contract\"},\"approveNewTimelock(address,bytes32)\":{\"notice\":\"Approve new timelock contract\"},\"approveNewTipJar(address,bytes32)\":{\"notice\":\"Approve new tip jar contract\"},\"approveUpgrade(address,bytes32)\":{\"notice\":\"Approve new implementation for TipJar proxy\"},\"approveUpgradeAndCall(address,bytes,uint256,bytes32)\":{\"notice\":\"Approve new implementation for TipJar proxy + call function after\"},\"cancelProposal(bytes32)\":{\"notice\":\"Cancel proposal\"},\"constructor\":{\"notice\":\"Construct new TipJarManager contract, setting msg.sender as admin\"},\"createProposal(address,uint256,bytes,bytes32,bytes32)\":{\"notice\":\"Create proposal\"},\"createProposalBatch(address[],uint256[],bytes[],bytes32,bytes32)\":{\"notice\":\"Create batch proposal\"},\"criticalDelay()\":{\"notice\":\"Delay for critical changes\"},\"executeProposal(address,uint256,bytes,bytes32,bytes32)\":{\"notice\":\"Execute proposal\"},\"executeProposalBatch(address[],uint256[],bytes[],bytes32,bytes32)\":{\"notice\":\"Execute batch proposal\"},\"getProxyAdmin()\":{\"notice\":\"Public getter for TipJar Proxy admin address\"},\"getProxyImplementation()\":{\"notice\":\"Public getter for TipJar Proxy implementation contract address\"},\"initialize(address,address,address,uint256,uint256)\":{\"notice\":\"Initialize contract\"},\"proposeNewAdmin(address,bytes32)\":{\"notice\":\"Propose new admin for this contract\"},\"proposeNewCriticalDelay(uint256,bytes32)\":{\"notice\":\"Propose new critical delay for this contract\"},\"proposeNewFee(uint32,bytes32)\":{\"notice\":\"Propose a new network fee\"},\"proposeNewFeeCollector(address,bytes32)\":{\"notice\":\"Propose a new fee collector\"},\"proposeNewMinerSplit(address,address,uint32,bytes32)\":{\"notice\":\"Propose a new miner split\"},\"proposeNewProxyAdmin(address,bytes32)\":{\"notice\":\"Propose new admin for TipJar proxy contract\"},\"proposeNewRegularDelay(uint256,bytes32)\":{\"notice\":\"Propose new regular delay for this contract\"},\"proposeNewTimelock(address,bytes32)\":{\"notice\":\"Propose new timelock contract\"},\"proposeNewTipJar(address,bytes32)\":{\"notice\":\"Propose new tip jar contract\"},\"proposeUpgrade(address,bytes32)\":{\"notice\":\"Propose new implementation for TipJar proxy contract\"},\"proposeUpgradeAndCall(address,bytes,uint256,bytes32)\":{\"notice\":\"Propose new implementation for TipJar proxy contract + call function after\"},\"regularDelay()\":{\"notice\":\"Delay for non-critical changes\"},\"setAdmin(address)\":{\"notice\":\"Set new admin for this contract\"},\"setCriticalDelay(uint256)\":{\"notice\":\"Set new critical delay for this contract\"},\"setProxyAdmin(address)\":{\"notice\":\"Set new admin for TipJar proxy contract\"},\"setRegularDelay(uint256)\":{\"notice\":\"Set new regular delay for this contract\"},\"setTimelock(address)\":{\"notice\":\"Set new timelock contract\"},\"setTipJar(address)\":{\"notice\":\"Set new tip jar contract\"},\"timelock()\":{\"notice\":\"Timelock contract\"},\"tipJar()\":{\"notice\":\"TipJarProxy address\"},\"upgrade(address)\":{\"notice\":\"Set new implementation for TipJar proxy contract\"},\"upgradeAndCall(address,bytes)\":{\"notice\":\"Set new implementation for TipJar proxy contract + call function after\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TipJarManager.sol\":\"TipJarManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TipJarManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/*\\n  Copyright 2021 Archer DAO: Chris Piatt (chris@archerdao.io).\\n*/\\n\\nimport \\\"./interfaces/ITimelockController.sol\\\";\\nimport \\\"./lib/0.8/Initializable.sol\\\";\\n\\n/**\\n * @title TipJarManager\\n * @dev Responsible for enacting decisions related to sensitive TipJar parameters\\n * Decisions are made via a timelock contract\\n */\\ncontract TipJarManager is Initializable {\\n\\n    /// @notice TipJarManager admin\\n    address public admin;\\n\\n    /// @notice Delay for critical changes\\n    uint256 public criticalDelay;\\n\\n    /// @notice Delay for non-critical changes\\n    uint256 public regularDelay;\\n\\n    /// @notice TipJarProxy address\\n    address public tipJar;\\n\\n    /// @notice Timelock contract\\n    ITimelockController public timelock;\\n\\n    /// @notice Admin modifier\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"not admin\\\");\\n        _;\\n    }\\n\\n    /// @notice Timelock modifier\\n    modifier onlyTimelock() {\\n        require(msg.sender == address(timelock), \\\"not timelock\\\");\\n        _;\\n    }\\n\\n    /// @notice Miner Split Proposal event\\n    event MinerSplitProposal(address indexed proposer, address indexed miner, address indexed splitTo, uint32 splitPct, uint256 eta, bytes32 proposalID, bytes32 salt);\\n\\n    /// @notice Miner Split Approval event\\n    event MinerSplitApproval(address indexed approver, address indexed miner, address indexed splitTo, uint32 splitPct);\\n\\n    /// @notice Fee Proposal event\\n    event FeeProposal(address indexed proposer, uint32 newFee, uint256 eta, bytes32 proposalID, bytes32 salt);\\n\\n    /// @notice Fee Approval event\\n    event FeeApproval(address indexed approver, uint32 newFee);\\n\\n    /// @notice Fee Collector Proposal event\\n    event FeeCollectorProposal(address indexed proposer, address indexed newCollector, uint256 eta, bytes32 proposalID, bytes32 salt);\\n\\n    /// @notice Fee Collector Approval event\\n    event FeeCollectorApproval(address indexed approver, address indexed newCollector);\\n\\n    /// @notice New admin event\\n    event AdminChanged(address indexed oldAdmin, address indexed newAdmin);\\n\\n    /// @notice New delay event\\n    event DelayChanged(string indexed delayType, uint256 indexed oldDelay, uint256 indexed newDelay);\\n\\n    /// @notice New timelock event\\n    event TimelockChanged(address indexed oldTimelock, address indexed newTimelock);\\n\\n    /// @notice New tip jar event\\n    event TipJarChanged(address indexed oldTipJar, address indexed newTipJar);\\n\\n    /// @notice Receive function to allow contract to accept ETH\\n    receive() external payable {}\\n\\n    /// @notice Fallback function to allow contract to accept ETH\\n    fallback() external payable {}\\n\\n    /**\\n     * @notice Construct new TipJarManager contract, setting msg.sender as admin\\n     */\\n    constructor() {\\n        admin = msg.sender;\\n        emit AdminChanged(address(0), msg.sender);\\n    }\\n\\n    /**\\n     * @notice Initialize contract\\n     * @param _tipJar TipJar proxy contract address\\n     * @param _admin Admin address\\n     * @param _timelock TimelockController contract address\\n     */\\n    function initialize(\\n        address _tipJar,\\n        address _admin,\\n        address payable _timelock,\\n        uint256 _criticalDelay,\\n        uint256 _regularDelay\\n    ) external initializer onlyAdmin {\\n        emit AdminChanged(admin, _admin);\\n        admin = _admin;\\n\\n        tipJar = _tipJar;\\n        emit TipJarChanged(address(0), _tipJar);\\n        \\n        timelock = ITimelockController(_timelock);\\n        emit TimelockChanged(address(0), _timelock);\\n\\n        criticalDelay = _criticalDelay;\\n        emit DelayChanged(\\\"critical\\\", 0, _criticalDelay);\\n\\n        regularDelay = _regularDelay;\\n        emit DelayChanged(\\\"regular\\\", 0, _regularDelay);\\n    }\\n\\n    /**\\n     * @notice Propose a new miner split\\n     * @param minerAddress Address of miner\\n     * @param splitTo Address that receives split\\n     * @param splitPct % of tip that splitTo receives\\n     * @param salt salt\\n     */\\n    function proposeNewMinerSplit(\\n        address minerAddress,\\n        address splitTo,\\n        uint32 splitPct,\\n        bytes32 salt\\n    ) external onlyAdmin {\\n        // bytes4(keccak256(\\\"updateMinerSplit(address,address,uint32)\\\")) = 0x8d916340\\n        bytes32 id = _schedule(tipJar, 0, abi.encodeWithSelector(hex\\\"8d916340\\\", minerAddress, splitTo, splitPct), bytes32(0), salt, regularDelay);\\n        emit MinerSplitProposal(msg.sender, minerAddress, splitTo, splitPct, block.timestamp + regularDelay, id, salt);\\n    }\\n\\n    /**\\n     * @notice Approve a new miner split\\n     * @param minerAddress Address of miner\\n     * @param splitTo Address that receives split\\n     * @param splitPct % of tip that splitTo receives\\n     * @param salt salt\\n     */\\n    function approveNewMinerSplit(\\n        address minerAddress,\\n        address splitTo,\\n        uint32 splitPct,\\n        bytes32 salt\\n    ) external {\\n        // bytes4(keccak256(\\\"updateMinerSplit(address,address,uint32)\\\")) = 0x8d916340\\n        _execute(tipJar, 0, abi.encodeWithSelector(hex\\\"8d916340\\\", minerAddress, splitTo, splitPct), bytes32(0), salt);\\n        emit MinerSplitApproval(msg.sender, minerAddress, splitTo, splitPct);\\n    }\\n\\n    /**\\n     * @notice Propose a new network fee\\n     * @param newFee New fee\\n     * @param salt salt\\n     */\\n    function proposeNewFee(\\n        uint32 newFee, \\n        bytes32 salt\\n    ) external onlyAdmin {\\n        // bytes4(keccak256(\\\"setFee(uint32)\\\")) = 0x1ab971ab\\n        bytes32 id = _schedule(tipJar, 0, abi.encodeWithSelector(hex\\\"1ab971ab\\\", newFee), bytes32(0), salt, criticalDelay);\\n        emit FeeProposal(msg.sender, newFee, block.timestamp + regularDelay, id, salt);\\n    }\\n\\n    /**\\n     * @notice Approve a new network fee\\n     * @param newFee New fee\\n     * @param salt salt\\n     */\\n    function approveNewFee(\\n        uint32 newFee, \\n        bytes32 salt\\n    ) external {\\n        // bytes4(keccak256(\\\"setFee(uint32)\\\")) = 0x1ab971ab\\n        _execute(tipJar, 0, abi.encodeWithSelector(hex\\\"1ab971ab\\\", newFee), bytes32(0), salt);\\n        emit FeeApproval(msg.sender, newFee);\\n    }\\n\\n    /**\\n     * @notice Propose a new fee collector\\n     * @param newFeeCollector New fee collector\\n     * @param salt salt\\n     */\\n    function proposeNewFeeCollector(\\n        address newFeeCollector, \\n        bytes32 salt\\n    ) external onlyAdmin {\\n        // bytes4(keccak256(\\\"setFeeCollector(address)\\\")) = 0xa42dce80\\n        bytes32 id = _schedule(tipJar, 0, abi.encodeWithSelector(hex\\\"a42dce80\\\", newFeeCollector), bytes32(0), salt, criticalDelay);\\n        emit FeeCollectorProposal(msg.sender, newFeeCollector, block.timestamp + regularDelay, id, salt);\\n    }\\n\\n    /**\\n     * @notice Approve a new fee collector\\n     * @param newFeeCollector New fee collector\\n     * @param salt salt\\n     */\\n    function approveNewFeeCollector(\\n        address newFeeCollector, \\n        bytes32 salt\\n    ) external {\\n        // bytes4(keccak256(\\\"setFeeCollector(address)\\\")) = 0xa42dce80\\n        _execute(tipJar, 0, abi.encodeWithSelector(hex\\\"a42dce80\\\", newFeeCollector), bytes32(0), salt);\\n        emit FeeCollectorApproval(msg.sender, newFeeCollector);\\n    }\\n\\n    /**\\n     * @notice Propose new admin for this contract\\n     * @param newAdmin new admin address\\n     * @param salt salt\\n     */\\n    function proposeNewAdmin(\\n        address newAdmin,\\n        bytes32 salt\\n    ) external onlyAdmin {\\n        // bytes4(keccak256(\\\"setAdmin(address)\\\")) = 0x704b6c02\\n        _schedule(address(this), 0, abi.encodeWithSelector(hex\\\"704b6c02\\\", newAdmin), bytes32(0), salt, criticalDelay);\\n    }\\n\\n    /**\\n     * @notice Approve new admin for this contract\\n     * @param newAdmin new admin address\\n     * @param salt salt\\n     */\\n    function approveNewAdmin(\\n        address newAdmin,\\n        bytes32 salt\\n    ) external {\\n        // bytes4(keccak256(\\\"setAdmin(address)\\\")) = 0x704b6c02\\n        _execute(address(this), 0, abi.encodeWithSelector(hex\\\"704b6c02\\\", newAdmin), bytes32(0), salt);\\n    }\\n\\n    /**\\n     * @notice Set new admin for this contract\\n     * @dev Can only be executed by Timelock contract\\n     * @param newAdmin new admin address\\n     */\\n    function setAdmin(\\n        address newAdmin\\n    ) external onlyTimelock {\\n        emit AdminChanged(admin, newAdmin);\\n        admin = newAdmin;\\n    }\\n\\n    /**\\n     * @notice Propose new critical delay for this contract\\n     * @param newDelay new delay time\\n     * @param salt salt\\n     */\\n    function proposeNewCriticalDelay(\\n        uint256 newDelay,\\n        bytes32 salt\\n    ) external onlyAdmin {\\n        // bytes4(keccak256(\\\"setCriticalDelay(uint256)\\\")) = 0xdad8a096\\n        _schedule(address(this), 0, abi.encodeWithSelector(hex\\\"dad8a096\\\", newDelay), bytes32(0), salt, criticalDelay);\\n    }\\n\\n    /**\\n     * @notice Approve new critical delay for this contract\\n     * @param newDelay new delay time\\n     * @param salt salt\\n     */\\n    function approveNewCriticalDelay(\\n        uint256 newDelay,\\n        bytes32 salt\\n    ) external {\\n        // bytes4(keccak256(\\\"setCriticalDelay(uint256)\\\")) = 0xdad8a096\\n        _execute(address(this), 0, abi.encodeWithSelector(hex\\\"dad8a096\\\", newDelay), bytes32(0), salt);\\n    }\\n\\n    /**\\n     * @notice Set new critical delay for this contract\\n     * @dev Can only be executed by Timelock contract\\n     * @param newDelay new delay time\\n     */\\n    function setCriticalDelay(\\n        uint256 newDelay\\n    ) external onlyTimelock {\\n        emit DelayChanged(\\\"critical\\\", criticalDelay, newDelay);\\n        criticalDelay = newDelay;\\n    }\\n\\n    /**\\n     * @notice Propose new regular delay for this contract\\n     * @param newDelay new delay time\\n     * @param salt salt\\n     */\\n    function proposeNewRegularDelay(\\n        uint256 newDelay,\\n        bytes32 salt\\n    ) external onlyAdmin {\\n        // bytes4(keccak256(\\\"setRegularDelay(uint256)\\\")) = 0x8023dc81\\n        _schedule(address(this), 0, abi.encodeWithSelector(hex\\\"8023dc81\\\", newDelay), bytes32(0), salt, criticalDelay);\\n    }\\n\\n    /**\\n     * @notice Approve new regular delay for this contract\\n     * @param newDelay new delay time\\n     * @param salt salt\\n     */\\n    function approveNewRegularDelay(\\n        uint256 newDelay,\\n        bytes32 salt\\n    ) external {\\n        // bytes4(keccak256(\\\"setRegularDelay(uint256)\\\")) = 0x8023dc81\\n        _execute(address(this), 0, abi.encodeWithSelector(hex\\\"8023dc81\\\", newDelay), bytes32(0), salt);\\n    }\\n\\n    /**\\n     * @notice Set new regular delay for this contract\\n     * @dev Can only be executed by Timelock contract\\n     * @param newDelay new delay time\\n     */\\n    function setRegularDelay(\\n        uint256 newDelay\\n    ) external onlyTimelock {\\n        emit DelayChanged(\\\"regular\\\", regularDelay, newDelay);\\n        regularDelay = newDelay;\\n    }\\n\\n    /**\\n     * @notice Propose new tip jar contract\\n     * @param newTipJar new tip jar address\\n     * @param salt salt\\n     */\\n    function proposeNewTipJar(\\n        address newTipJar,\\n        bytes32 salt\\n    ) external onlyAdmin {\\n        // bytes4(keccak256(\\\"setTipJar(address)\\\")) = 0x5c66e3da\\n        _schedule(address(this), 0, abi.encodeWithSelector(hex\\\"5c66e3da\\\", newTipJar), bytes32(0), salt, criticalDelay);\\n    }\\n\\n    /**\\n     * @notice Approve new tip jar contract\\n     * @param newTipJar new tip jar address\\n     * @param salt salt\\n     */\\n    function approveNewTipJar(\\n        address newTipJar,\\n        bytes32 salt\\n    ) external {\\n        // bytes4(keccak256(\\\"setTipJar(address)\\\")) = 0x5c66e3da\\n        _execute(address(this), 0, abi.encodeWithSelector(hex\\\"5c66e3da\\\", newTipJar), bytes32(0), salt);\\n    }\\n\\n    /**\\n     * @notice Set new tip jar contract\\n     * @dev Can only be executed by Timelock contract\\n     * @param newTipJar new tip jar address\\n     */\\n    function setTipJar(\\n        address newTipJar\\n    ) external onlyTimelock {\\n        emit TipJarChanged(tipJar, newTipJar);\\n        tipJar = newTipJar;\\n    }\\n\\n    /**\\n     * @notice Propose new timelock contract\\n     * @param newTimelock new timelock address\\n     * @param salt salt\\n     */\\n    function proposeNewTimelock(\\n        address newTimelock,\\n        bytes32 salt\\n    ) external onlyAdmin {\\n        // bytes4(keccak256(\\\"setTimelock(address)\\\")) = 0xbdacb303\\n        _schedule(address(this), 0, abi.encodeWithSelector(hex\\\"bdacb303\\\", newTimelock), bytes32(0), salt, criticalDelay);\\n    }\\n\\n    /**\\n     * @notice Approve new timelock contract\\n     * @param newTimelock new timelock address\\n     * @param salt salt\\n     */\\n    function approveNewTimelock(\\n        address newTimelock,\\n        bytes32 salt\\n    ) external {\\n        // bytes4(keccak256(\\\"setTimelock(address)\\\")) = 0xbdacb303\\n        _execute(address(this), 0, abi.encodeWithSelector(hex\\\"bdacb303\\\", newTimelock), bytes32(0), salt);\\n    }\\n\\n    /**\\n     * @notice Set new timelock contract\\n     * @dev Can only be executed by Timelock contract or anyone if timelock has not yet been set\\n     * @param newTimelock new timelock address\\n     */\\n    function setTimelock(\\n        address payable newTimelock\\n    ) external onlyTimelock {\\n        emit TimelockChanged(address(timelock), newTimelock);\\n        timelock = ITimelockController(newTimelock);\\n    }\\n\\n    /**\\n     * @notice Public getter for TipJar Proxy implementation contract address\\n     */\\n    function getProxyImplementation() public view returns (address) {\\n        // We need to manually run the static call since the getter cannot be flagged as view\\n        // bytes4(keccak256(\\\"implementation()\\\")) == 0x5c60da1b\\n        (bool success, bytes memory returndata) = tipJar.staticcall(hex\\\"5c60da1b\\\");\\n        require(success);\\n        return abi.decode(returndata, (address));\\n    }\\n\\n    /**\\n     * @notice Public getter for TipJar Proxy admin address\\n     */\\n    function getProxyAdmin() public view returns (address) {\\n        // We need to manually run the static call since the getter cannot be flagged as view\\n        // bytes4(keccak256(\\\"admin()\\\")) == 0xf851a440\\n        (bool success, bytes memory returndata) = tipJar.staticcall(hex\\\"f851a440\\\");\\n        require(success);\\n        return abi.decode(returndata, (address));\\n    }\\n\\n    /**\\n     * @notice Propose new admin for TipJar proxy contract\\n     * @param newAdmin new admin address\\n     * @param salt salt\\n     */\\n    function proposeNewProxyAdmin(\\n        address newAdmin,\\n        bytes32 salt\\n    ) external onlyAdmin {\\n        // bytes4(keccak256(\\\"setProxyAdmin(address)\\\")) = 0x47c02661\\n        _schedule(address(this), 0, abi.encodeWithSelector(hex\\\"47c02661\\\", newAdmin), bytes32(0), salt, criticalDelay);\\n    }\\n\\n    /**\\n     * @notice Approve new admin for TipJar proxy contract\\n     * @param newAdmin new admin address\\n     * @param salt salt\\n     */\\n    function approveNewProxyAdmin(\\n        address newAdmin,\\n        bytes32 salt\\n    ) external {\\n        // bytes4(keccak256(\\\"setProxyAdmin(address)\\\")) = 0x47c02661\\n        _execute(address(this), 0, abi.encodeWithSelector(hex\\\"47c02661\\\", newAdmin), bytes32(0), salt);\\n    }\\n\\n    /**\\n     * @notice Set new admin for TipJar proxy contract\\n     * @param newAdmin new admin address\\n     */\\n    function setProxyAdmin(\\n        address newAdmin\\n    ) external onlyTimelock {\\n        // bytes4(keccak256(\\\"changeAdmin(address)\\\")) = 0x8f283970\\n        (bool success, ) = tipJar.call(abi.encodeWithSelector(hex\\\"8f283970\\\", newAdmin));\\n        require(success, \\\"setProxyAdmin failed\\\");\\n    }\\n\\n    /**\\n     * @notice Propose new implementation for TipJar proxy contract\\n     * @param newImplementation new implementation address\\n     * @param salt salt\\n     */\\n    function proposeUpgrade(\\n        address newImplementation,\\n        bytes32 salt\\n    ) external onlyAdmin {\\n        // bytes4(keccak256(\\\"upgrade(address)\\\")) = 0x0900f010\\n        _schedule(address(this), 0, abi.encodeWithSelector(hex\\\"0900f010\\\", newImplementation), bytes32(0), salt, criticalDelay);\\n    }\\n\\n    /**\\n     * @notice Approve new implementation for TipJar proxy\\n     * @param newImplementation new implementation address\\n     * @param salt salt\\n     */\\n    function approveUpgrade(\\n        address newImplementation,\\n        bytes32 salt\\n    ) external {\\n        // bytes4(keccak256(\\\"upgrade(address)\\\")) = 0x0900f010\\n        _execute(address(this), 0, abi.encodeWithSelector(hex\\\"0900f010\\\", newImplementation), bytes32(0), salt);\\n    }\\n\\n    /**\\n     * @notice Set new implementation for TipJar proxy contract\\n     * @param newImplementation new implementation address\\n     */\\n    function upgrade(\\n        address newImplementation\\n    ) external onlyTimelock {\\n        // bytes4(keccak256(\\\"upgradeTo(address)\\\")) = 0x3659cfe6\\n        (bool success, ) = tipJar.call(abi.encodeWithSelector(hex\\\"3659cfe6\\\", newImplementation));\\n        require(success, \\\"upgrade failed\\\");\\n    }\\n\\n    /**\\n     * @notice Propose new implementation for TipJar proxy contract + call function after\\n     * @param newImplementation new implementation address\\n     * @param data Bytes-encoded function to call\\n     * @param value Amount of ETH to send on call\\n     * @param salt salt\\n     */\\n    function proposeUpgradeAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        uint256 value,\\n        bytes32 salt\\n    ) external onlyAdmin {\\n        // bytes4(keccak256(\\\"upgradeAndCall(address,bytes)\\\")) = 0x2a6a833b\\n        _schedule(tipJar, value, abi.encodeWithSelector(hex\\\"2a6a833b\\\", newImplementation, data), bytes32(0), salt, criticalDelay);\\n    }\\n\\n    /**\\n     * @notice Approve new implementation for TipJar proxy + call function after\\n     * @param newImplementation new implementation address\\n     * @param data Bytes-encoded function to call\\n     * @param value Amount of ETH to send on call\\n     * @param salt salt\\n     */\\n    function approveUpgradeAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        uint256 value,\\n        bytes32 salt\\n    ) external payable {\\n        // bytes4(keccak256(\\\"upgradeAndCall(address,bytes)\\\")) = 0x2a6a833b\\n        _execute(tipJar, value, abi.encodeWithSelector(hex\\\"2a6a833b\\\", newImplementation, data), bytes32(0), salt);\\n    }\\n\\n    /**\\n     * @notice Set new implementation for TipJar proxy contract + call function after\\n     * @param newImplementation new implementation address\\n     * @param data Bytes-encoded function to call\\n     */\\n    function upgradeAndCall(\\n        address newImplementation,\\n        bytes memory data\\n    ) external payable onlyTimelock {\\n        // bytes4(keccak256(\\\"upgradeToAndCall(address,bytes)\\\")) = 0x4f1ef286\\n        (bool success, ) = tipJar.call{value: msg.value}(abi.encodeWithSelector(hex\\\"4f1ef286\\\", newImplementation, data));\\n        require(success, \\\"upgradeAndCall failed\\\");\\n    }\\n\\n    /**\\n     * @notice Create proposal\\n     * @param target target address\\n     * @param value ETH value\\n     * @param data function call bytes\\n     * @param predecessor predecessor function call\\n     * @param salt salt used in proposal\\n     */\\n    function createProposal(\\n        address target, \\n        uint256 value, \\n        bytes memory data, \\n        bytes32 predecessor, \\n        bytes32 salt\\n    ) external onlyAdmin {\\n        _schedule(target, value, data, predecessor, salt, criticalDelay);\\n    }\\n\\n    /**\\n     * @notice Create batch proposal\\n     * @param targets target address\\n     * @param values ETH value\\n     * @param datas function call bytes\\n     * @param predecessor predecessor function call\\n     * @param salt salt used in proposal\\n     */\\n    function createProposalBatch(\\n        address[] calldata targets, \\n        uint256[] calldata values, \\n        bytes[] calldata datas, \\n        bytes32 predecessor, \\n        bytes32 salt\\n    ) external onlyAdmin {\\n        timelock.scheduleBatch(targets, values, datas, predecessor, salt, criticalDelay);\\n    }\\n\\n    /**\\n     * @notice Execute proposal\\n     * @param target target address\\n     * @param value ETH value\\n     * @param data function call bytes\\n     * @param predecessor predecessor function call\\n     * @param salt salt used in proposal\\n     */\\n    function executeProposal(\\n        address target, \\n        uint256 value, \\n        bytes memory data, \\n        bytes32 predecessor, \\n        bytes32 salt\\n    ) external payable onlyAdmin {\\n        _execute(target, value, data, predecessor, salt);\\n    }\\n\\n    /**\\n     * @notice Execute batch proposal\\n     * @param targets target address\\n     * @param values ETH value\\n     * @param datas function call bytes\\n     * @param predecessor predecessor function call\\n     * @param salt salt used in proposal\\n     */\\n    function executeProposalBatch(\\n        address[] calldata targets, \\n        uint256[] calldata values, \\n        bytes[] calldata datas, \\n        bytes32 predecessor, \\n        bytes32 salt\\n    ) external payable onlyAdmin {\\n        timelock.executeBatch{value: msg.value}(targets, values, datas, predecessor, salt);\\n    }\\n\\n    /**\\n     * @notice Cancel proposal\\n     * @param id ID of proposal\\n     */\\n    function cancelProposal(bytes32 id) external onlyAdmin {\\n        timelock.cancel(id);\\n    }\\n\\n    /**\\n     * @notice Internal schedule implementation\\n     * @param target target address\\n     * @param value ETH value\\n     * @param data Bytes-encoded function call\\n     * @param predecessor scheduled item to execute before this call\\n     * @param salt salt\\n     * @param delay delay for proposal\\n     */\\n    function _schedule(\\n        address target, \\n        uint256 value, \\n        bytes memory data, \\n        bytes32 predecessor, \\n        bytes32 salt, \\n        uint256 delay\\n    ) private returns (bytes32 id) {\\n        return timelock.schedule(target, value, data, predecessor, salt, delay);\\n    }\\n\\n    /**\\n     * @notice Internal execute implementation\\n     * @param target target address\\n     * @param value ETH value\\n     * @param data Bytes-encoded function call\\n     * @param predecessor scheduled item to execute before this call\\n     * @param salt salt\\n     */\\n    function _execute(\\n        address target, \\n        uint256 value, \\n        bytes memory data, \\n        bytes32 predecessor, \\n        bytes32 salt\\n    ) private {\\n        timelock.execute{value: value}(target, value, data, predecessor, salt);\\n    }\\n}\\n\",\"keccak256\":\"0x7edcafc6caab08b0879b29d31f30836484198295c21e727407ecfb16acae747e\",\"license\":\"MIT\"},\"contracts/interfaces/ITimelockController.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ITimelockController {\\n    function TIMELOCK_ADMIN_ROLE() external view returns (bytes32);\\n    function PROPOSER_ROLE() external view returns (bytes32);\\n    function EXECUTOR_ROLE() external view returns (bytes32);\\n    function _DONE_TIMESTAMP() external view returns (uint256);\\n    receive() external payable;\\n    function isOperation(bytes32 id) external view returns (bool pending);\\n    function isOperationPending(bytes32 id) external view returns (bool pending);\\n    function isOperationReady(bytes32 id) external view returns (bool ready);\\n    function isOperationDone(bytes32 id) external view returns (bool done);\\n    function getTimestamp(bytes32 id) external view returns (uint256 timestamp);\\n    function getMinDelay() external view returns (uint256 duration);\\n    function hashOperation(address target, uint256 value, bytes calldata data, bytes32 predecessor, bytes32 salt) external pure returns (bytes32 hash);\\n    function hashOperationBatch(address[] calldata targets, uint256[] calldata values, bytes[] calldata datas, bytes32 predecessor, bytes32 salt) external pure returns (bytes32 hash);\\n    function schedule(address target, uint256 value, bytes calldata data, bytes32 predecessor, bytes32 salt, uint256 delay) external returns (bytes32 id);\\n    function scheduleBatch(address[] calldata targets, uint256[] calldata values, bytes[] calldata datas, bytes32 predecessor, bytes32 salt, uint256 delay) external returns (bytes32 id);\\n    function cancel(bytes32 id) external;\\n    function execute(address target, uint256 value, bytes calldata data, bytes32 predecessor, bytes32 salt) external payable;\\n    function executeBatch(address[] calldata targets, uint256[] calldata values, bytes[] calldata datas, bytes32 predecessor, bytes32 salt) external payable;\\n    function updateDelay(uint256 newDelay) external;\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n    function grantRole(bytes32 role, address account) external;\\n    function revokeRole(bytes32 role, address account) external;\\n    function renounceRole(bytes32 role, address account) external;\\n    event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay);\\n    event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data);\\n    event Cancelled(bytes32 indexed id);\\n    event MinDelayChange(uint256 oldDuration, uint256 newDuration);\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n}\",\"keccak256\":\"0x44ed25d06de07350d9b2cc5697edfb1fd74c4398f757c17637b2123c0a394934\",\"license\":\"MIT\"},\"contracts/lib/0.8/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\",\"keccak256\":\"0xbf8dc250aa07ec2837ce70f902e3964a22b749a26160e39865f85f659dc48b66\",\"license\":\"MIT\"},\"contracts/lib/0.8/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\",\"keccak256\":\"0xc445e701fc984ebd4faf7aa82e40cd0068f5893a31c1557ca86c74fec69f1e8e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506000805462010000600160b01b031916336201000081029190911782556040519091907f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f908290a3612787806100686000396000f3fe6080604052600436106102605760003560e01c806390e4b72011610144578063c77324dc116100b6578063dc2ba9461161007a578063dc2ba946146106f0578063dd107d1314610703578063e58d307814610723578063e5e6c5fe14610743578063e61dd41814610763578063f851a4401461077657610267565b8063c77324dc1461065a578063d33219b41461067a578063d86cf6011461069a578063da253015146106ba578063dad8a096146106d057610267565b8063a6b63eb811610108578063a6b63eb81461059a578063aa87cc81146105ba578063b1e60f75146105da578063bc58ca69146105fa578063bdacb3031461061a578063c14734a81461063a57610267565b806390e4b7201461050157806397d43d65146105165780639982cb2e146105365780639b8c30a01461055a5780639dfa34641461057a57610267565b806347c02661116101dd578063704b6c02116101a1578063704b6c021461042f57806378c720751461044f5780637aaceb951461046f5780637b8bf297146104ac5780638023dc81146104cc5780638b3240a0146104ec57610267565b806347c026611461038f578063512e1435146103af5780635c66e3da146103cf57806369c40231146103ef5780636d3d1bcb1461040f57610267565b80632a6a833b116102245780632a6a833b14610309578063317636f21461031c57806333ddddce1461033c57806337376ca81461034f578063433645091461036f57610267565b80630900f010146102695780630d5a5b8b146102895780630edaeb0f146102a9578063102aff80146102c957806324ef737c146102e957610267565b3661026757005b005b34801561027557600080fd5b50610267610284366004612059565b61079c565b34801561029557600080fd5b506102676102a4366004612376565b6108aa565b3480156102b557600080fd5b506102676102c4366004612140565b6109a9565b3480156102d557600080fd5b506102676102e4366004612355565b6109f9565b3480156102f557600080fd5b50610267610304366004612355565b610a44565b61026761031736600461216b565b610ac9565b34801561032857600080fd5b506102676103373660046121b9565b610bd8565b61026761034a366004612217565b610c6c565b34801561035b57600080fd5b5061026761036a366004612325565b610ca9565b34801561037b57600080fd5b5061026761038a366004612140565b610d31565b34801561039b57600080fd5b506102676103aa366004612059565b610db6565b3480156103bb57600080fd5b506102676103ca366004612355565b610ebd565b3480156103db57600080fd5b506102676103ea366004612059565b610f3d565b3480156103fb57600080fd5b5061026761040a366004612140565b610fc3565b34801561041b57600080fd5b5061026761042a366004612140565b611013565b34801561043b57600080fd5b5061026761044a366004612059565b611063565b34801561045b57600080fd5b5061026761046a366004612140565b6110f6565b34801561047b57600080fd5b5060035461048f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156104b857600080fd5b506102676104c7366004612140565b611145565b3480156104d857600080fd5b506102676104e7366004612325565b6111ca565b3480156104f857600080fd5b5061048f611235565b34801561050d57600080fd5b5061048f6112c4565b34801561052257600080fd5b50610267610531366004612140565b6112ed565b34801561054257600080fd5b5061054c60025481565b6040519081526020016104a3565b34801561056657600080fd5b50610267610575366004612140565b611372565b34801561058657600080fd5b50610267610595366004612355565b611466565b3480156105a657600080fd5b506102676105b5366004612098565b6114b1565b3480156105c657600080fd5b506102676105d5366004612140565b611702565b3480156105e657600080fd5b506102676105f5366004612140565b611786565b34801561060657600080fd5b50610267610615366004612140565b611814565b34801561062657600080fd5b50610267610635366004612059565b611899565b34801561064657600080fd5b50610267610655366004612280565b61191f565b34801561066657600080fd5b50610267610675366004612376565b6119ec565b34801561068657600080fd5b5060045461048f906001600160a01b031681565b3480156106a657600080fd5b506102676106b5366004612217565b611a83565b3480156106c657600080fd5b5061054c60015481565b3480156106dc57600080fd5b506102676106eb366004612325565b611ac3565b6102676106fe366004612280565b611b2f565b34801561070f57600080fd5b5061026761071e3660046120f2565b611bda565b34801561072f57600080fd5b5061026761073e366004612140565b611c93565b34801561074f57600080fd5b5061026761075e3660046120f2565b611ce3565b6102676107713660046121b9565b611e07565b34801561078257600080fd5b5060005461048f906201000090046001600160a01b031681565b6004546001600160a01b031633146107cf5760405162461bcd60e51b81526004016107c69061266a565b60405180910390fd5b6003546040516001600160a01b038381166024830152600092169060440160408051601f198184030181529181526020820180516001600160e01b0316631b2ce7f360e11b1790525161082291906124f0565b6000604051808303816000865af19150503d806000811461085f576040519150601f19603f3d011682016040523d82523d6000602084013e610864565b606091505b50509050806108a65760405162461bcd60e51b815260206004820152600e60248201526d1d5c19dc9859194819985a5b195960921b60448201526064016107c6565b5050565b6000546201000090046001600160a01b031633146108da5760405162461bcd60e51b81526004016107c690612690565b60035460405163ffffffff8416602482015260009161093b916001600160a01b0390911690839060440160408051601f198184030181529190526020810180516001600160e01b0316631ab971ab60e01b1790526001546000908790611e65565b9050336001600160a01b03167fe55e13505decce9f7ba3ff5c145bea70776719c2eb4af7502d6c7a58f8a774a0846002544261097791906126b3565b6040805163ffffffff9093168352602083019190915281018490526060810185905260800160405180910390a2505050565b6040516001600160a01b03831660248201526108a690309060009060440160408051601f198184030181529190526020810180516001600160e01b0316633825b60160e11b179052600085611efd565b6108a630600084604051602401610a1291815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316638023dc8160e01b179052600085611efd565b6000546201000090046001600160a01b03163314610a745760405162461bcd60e51b81526004016107c690612690565b610ac430600084604051602401610a8d91815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316636d6c504b60e11b1790526001546000908690611e65565b505050565b6004546001600160a01b03163314610af35760405162461bcd60e51b81526004016107c69061266a565b6003546040516000916001600160a01b0316903490610b18908690869060240161250c565b60408051601f198184030181529181526020820180516001600160e01b031663278f794360e11b17905251610b4d91906124f0565b60006040518083038185875af1925050503d8060008114610b8a576040519150601f19603f3d011682016040523d82523d6000602084013e610b8f565b606091505b5050905080610ac45760405162461bcd60e51b81526020600482015260156024820152741d5c19dc985919505b9910d85b1b0819985a5b1959605a1b60448201526064016107c6565b6000546201000090046001600160a01b03163314610c085760405162461bcd60e51b81526004016107c690612690565b600354604051610c65916001600160a01b0316908490610c2e908890889060240161250c565b60408051601f198184030181529190526020810180516001600160e01b0316632a6a833b60e01b1790526001546000908690611e65565b5050505050565b6000546201000090046001600160a01b03163314610c9c5760405162461bcd60e51b81526004016107c690612690565b610c658585858585611efd565b6000546201000090046001600160a01b03163314610cd95760405162461bcd60e51b81526004016107c690612690565b6004805460405163c4d252f560e01b81529182018390526001600160a01b03169063c4d252f590602401600060405180830381600087803b158015610d1d57600080fd5b505af1158015610c65573d6000803e3d6000fd5b6000546201000090046001600160a01b03163314610d615760405162461bcd60e51b81526004016107c690612690565b6040516001600160a01b0383166024820152610ac490309060009060440160408051601f198184030181529190526020810180516001600160e01b031663bdacb30360e01b1790526001546000908690611e65565b6004546001600160a01b03163314610de05760405162461bcd60e51b81526004016107c69061266a565b6003546040516001600160a01b038381166024830152600092169060440160408051601f198184030181529181526020820180516001600160e01b03166308f2839760e41b17905251610e3391906124f0565b6000604051808303816000865af19150503d8060008114610e70576040519150601f19603f3d011682016040523d82523d6000602084013e610e75565b606091505b50509050806108a65760405162461bcd60e51b81526020600482015260146024820152731cd95d141c9bde1e50591b5a5b8819985a5b195960621b60448201526064016107c6565b6000546201000090046001600160a01b03163314610eed5760405162461bcd60e51b81526004016107c690612690565b610ac430600084604051602401610f0691815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316638023dc8160e01b1790526001546000908690611e65565b6004546001600160a01b03163314610f675760405162461bcd60e51b81526004016107c69061266a565b6003546040516001600160a01b038084169216907fff9651e81ae7f692ad8df7b6184e00536887c968984c58a568083a1cac82451e90600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b6040516001600160a01b03831660248201526108a690309060009060440160408051601f198184030181529190526020810180516001600160e01b031663bdacb30360e01b179052600085611efd565b6040516001600160a01b03831660248201526108a690309060009060440160408051601f198184030181529190526020810180516001600160e01b03166347c0266160e01b179052600085611efd565b6004546001600160a01b0316331461108d5760405162461bcd60e51b81526004016107c69061266a565b600080546040516001600160a01b03808516936201000090930416917f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f91a3600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b6040516001600160a01b03831660248201526108a690309060009060440160408051601f198184030181529190526020810180516001600160e01b031662900f0160e41b179052600085611efd565b6000546201000090046001600160a01b031633146111755760405162461bcd60e51b81526004016107c690612690565b6040516001600160a01b0383166024820152610ac490309060009060440160408051601f198184030181529190526020810180516001600160e01b0316633825b60160e11b1790526001546000908690611e65565b6004546001600160a01b031633146111f45760405162461bcd60e51b81526004016107c69061266a565b8060025460405161121290663932b3bab630b960c91b815260070190565b6040519081900381209060008051602061273283398151915290600090a4600255565b6003546040516303e1469160e61b8152600091829182916001600160a01b0316906004015b600060405180830381855afa9150503d8060008114611295576040519150601f19603f3d011682016040523d82523d6000602084013e61129a565b606091505b5091509150816112a957600080fd5b808060200190518101906112bd919061207c565b9250505090565b600354604051635c60da1b60e01b8152600091829182916001600160a01b03169060040161125a565b6000546201000090046001600160a01b0316331461131d5760405162461bcd60e51b81526004016107c690612690565b6040516001600160a01b0383166024820152610ac490309060009060440160408051601f198184030181529190526020810180516001600160e01b0316632e3371ed60e11b1790526001546000908690611e65565b6000546201000090046001600160a01b031633146113a25760405162461bcd60e51b81526004016107c690612690565b6003546040516001600160a01b0384811660248301526000926113fe92911690839060440160408051601f198184030181529190526020810180516001600160e01b03166301485b9d60e71b1790526001546000908790611e65565b9050826001600160a01b0316336001600160a01b03167ffba3e2c833e27f6f78cc221cd889899ecd8c5ccd6be29eb0468f8859334ecaed6002544261144391906126b3565b6040805191825260208201869052810186905260600160405180910390a3505050565b6108a63060008460405160240161147f91815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316636d6c504b60e11b179052600085611efd565b600054610100900460ff16806114ca575060005460ff16155b61152d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016107c6565b600054610100900460ff1615801561154f576000805461ffff19166101011790555b6000546201000090046001600160a01b0316331461157f5760405162461bcd60e51b81526004016107c690612690565b600080546040516001600160a01b03808916936201000090930416917f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f91a3600080546001600160a01b03808816620100000262010000600160b01b0319909216919091178255600380549189166001600160a01b0319909216821790556040519091907fff9651e81ae7f692ad8df7b6184e00536887c968984c58a568083a1cac82451e908290a3600480546001600160a01b0319166001600160a01b0386169081179091556040516000907f0b16e94338dda95fa1e5c779ff12c1c00489fca89839afd381c4c5faffd6e2a1908290a360018390556040516718dc9a5d1a58d85b60c21b815283906000906008016040519081900381209060008051602061273283398151915290600090a46002829055604051663932b3bab630b960c91b815282906000906007016040519081900381209060008051602061273283398151915290600090a480156116fa576000805461ff00191690555b505050505050565b6000546201000090046001600160a01b031633146117325760405162461bcd60e51b81526004016107c690612690565b6040516001600160a01b0383166024820152610ac490309060009060440160408051601f198184030181529190526020810180516001600160e01b031662900f0160e41b1790526001546000908690611e65565b6003546040516001600160a01b0384811660248301526117da92169060009060440160408051601f198184030181529190526020810180516001600160e01b03166301485b9d60e71b179052600085611efd565b6040516001600160a01b0383169033907f53ac1c5cdda51e6aa0635375b348ae7d51f618deaddadd72fc2860057b1ffd9190600090a35050565b6000546201000090046001600160a01b031633146118445760405162461bcd60e51b81526004016107c690612690565b6040516001600160a01b0383166024820152610ac490309060009060440160408051601f198184030181529190526020810180516001600160e01b03166347c0266160e01b1790526001546000908690611e65565b6004546001600160a01b031633146118c35760405162461bcd60e51b81526004016107c69061266a565b6004546040516001600160a01b038084169216907f0b16e94338dda95fa1e5c779ff12c1c00489fca89839afd381c4c5faffd6e2a190600090a3600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546201000090046001600160a01b0316331461194f5760405162461bcd60e51b81526004016107c690612690565b600480546001546040516308f2a0bb60e41b81526001600160a01b0390921692638f2a0bb09261198f928d928d928d928d928d928d928d928d920161260c565b602060405180830381600087803b1580156119a957600080fd5b505af11580156119bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e1919061233d565b505050505050505050565b60035460405163ffffffff84166024820152611a44916001600160a01b03169060009060440160408051601f198184030181529190526020810180516001600160e01b0316631ab971ab60e01b179052600085611efd565b60405163ffffffff8316815233907fa94ad53bf43f2f6061cd0a2613212f8444ad7b078cfc41699eb70baff751f67b9060200160405180910390a25050565b6000546201000090046001600160a01b03163314611ab35760405162461bcd60e51b81526004016107c690612690565b6116fa8585858585600154611e65565b6004546001600160a01b03163314611aed5760405162461bcd60e51b81526004016107c69061266a565b80600154604051611b0c906718dc9a5d1a58d85b60c21b815260080190565b6040519081900381209060008051602061273283398151915290600090a4600155565b6000546201000090046001600160a01b03163314611b5f5760405162461bcd60e51b81526004016107c690612690565b6004805460405163e38335e560e01b81526001600160a01b039091169163e38335e5913491611b9e918d918d918d918d918d918d918d918d91016125b8565b6000604051808303818588803b158015611bb757600080fd5b505af1158015611bcb573d6000803e3d6000fd5b50505050505050505050505050565b6003546040516001600160a01b038681166024830152858116604483015263ffffffff85166064830152611c4292169060009060840160408051601f198184030181529190526020810180516001600160e01b0316630236458d60e61b179052600085611efd565b60405163ffffffff831681526001600160a01b03808516919086169033907f2c4ba364085ee54b447db6f054cd4cefd890878196bb741dc447490df29a64a69060200160405180910390a450505050565b6040516001600160a01b03831660248201526108a690309060009060440160408051601f198184030181529190526020810180516001600160e01b0316632e3371ed60e11b179052600085611efd565b6000546201000090046001600160a01b03163314611d135760405162461bcd60e51b81526004016107c690612690565b6003546040516001600160a01b038681166024830152858116604483015263ffffffff85166064830152600092611d8392911690839060840160408051601f198184030181529190526020810180516001600160e01b0316630236458d60e61b1790526002546000908790611e65565b9050836001600160a01b0316856001600160a01b0316336001600160a01b03167fa00a72f457c9f3e2f029eea91af16988e9b48415f9c9985d730652deb40a372e8660025442611dd391906126b3565b6040805163ffffffff9093168352602083019190915281018690526060810187905260800160405180910390a45050505050565b600354604051611e5f916001600160a01b0316908490611e2d908890889060240161250c565b60408051601f198184030181529190526020810180516001600160e01b0316632a6a833b60e01b179052600085611efd565b50505050565b6004805460405162ea831560e11b81526000926001600160a01b03909216916301d5062a91611ea0918b918b918b918b918b918b9101612573565b602060405180830381600087803b158015611eba57600080fd5b505af1158015611ece573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef2919061233d565b979650505050505050565b6004805460405163134008d360e01b81526001600160a01b039091169163134008d3918791611f36918a9184918a918a918a9101612538565b6000604051808303818588803b158015611f4f57600080fd5b505af1158015611f63573d6000803e3d6000fd5b50505050505050505050565b60008083601f840112611f80578182fd5b50813567ffffffffffffffff811115611f97578182fd5b6020830191508360208260051b8501011115611fb257600080fd5b9250929050565b600082601f830112611fc9578081fd5b813567ffffffffffffffff80821115611fe457611fe4612703565b604051601f8301601f19908116603f0116810190828211818310171561200c5761200c612703565b81604052838152866020858801011115612024578485fd5b8360208701602083013792830160200193909352509392505050565b803563ffffffff8116811461205457600080fd5b919050565b60006020828403121561206a578081fd5b813561207581612719565b9392505050565b60006020828403121561208d578081fd5b815161207581612719565b600080600080600060a086880312156120af578081fd5b85356120ba81612719565b945060208601356120ca81612719565b935060408601356120da81612719565b94979396509394606081013594506080013592915050565b60008060008060808587031215612107578384fd5b843561211281612719565b9350602085013561212281612719565b925061213060408601612040565b9396929550929360600135925050565b60008060408385031215612152578182fd5b823561215d81612719565b946020939093013593505050565b6000806040838503121561217d578182fd5b823561218881612719565b9150602083013567ffffffffffffffff8111156121a3578182fd5b6121af85828601611fb9565b9150509250929050565b600080600080608085870312156121ce578384fd5b84356121d981612719565b9350602085013567ffffffffffffffff8111156121f4578384fd5b61220087828801611fb9565b949794965050505060408301359260600135919050565b600080600080600060a0868803121561222e578081fd5b853561223981612719565b945060208601359350604086013567ffffffffffffffff81111561225b578182fd5b61226788828901611fb9565b9598949750949560608101359550608001359392505050565b60008060008060008060008060a0898b03121561229b578586fd5b883567ffffffffffffffff808211156122b2578788fd5b6122be8c838d01611f6f565b909a50985060208b01359150808211156122d6578788fd5b6122e28c838d01611f6f565b909850965060408b01359150808211156122fa578485fd5b506123078b828c01611f6f565b999c989b509699959896976060870135966080013595509350505050565b600060208284031215612336578081fd5b5035919050565b60006020828403121561234e578081fd5b5051919050565b60008060408385031215612367578182fd5b50508035926020909101359150565b60008060408385031215612388578182fd5b61215d83612040565b60008284526020808501945082825b858110156123ce5781356123b381612719565b6001600160a01b0316875295820195908201906001016123a0565b509495945050505050565b60008284526020808501808196508560051b8101915084845b878110156124595782840389528135601e19883603018112612412578687fd5b8701803567ffffffffffffffff81111561242a578788fd5b803603891315612438578788fd5b612445868289850161249a565b9a87019a95505050908401906001016123f2565b5091979650505050505050565b81835260006001600160fb1b0383111561247e578081fd5b8260051b80836020870137939093016020019283525090919050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b600081518084526124dc8160208601602086016126d7565b601f01601f19169290920160200192915050565b600082516125028184602087016126d7565b9190910192915050565b6001600160a01b0383168152604060208201819052600090612530908301846124c4565b949350505050565b600060018060a01b038716825285602083015260a0604083015261255f60a08301866124c4565b606083019490945250608001529392505050565b600060018060a01b038816825286602083015260c0604083015261259a60c08301876124c4565b606083019590955250608081019290925260a0909101529392505050565b600060a082526125cc60a083018a8c612391565b82810360208401526125df81898b612466565b905082810360408401526125f48187896123d9565b60608401959095525050608001529695505050505050565b600060c0825261262060c083018b8d612391565b8281036020840152612633818a8c612466565b9050828103604084015261264881888a6123d9565b60608401969096525050608081019290925260a0909101529695505050505050565b6020808252600c908201526b6e6f742074696d656c6f636b60a01b604082015260600190565b6020808252600990820152683737ba1030b236b4b760b91b604082015260600190565b600082198211156126d257634e487b7160e01b81526011600452602481fd5b500190565b60005b838110156126f25781810151838201526020016126da565b83811115611e5f5750506000910152565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461272e57600080fd5b5056fed4ec76c9ec44b1200102d7e181ebeff8008a397ea9e4c71b50f9e1dc1a9d5bd3a2646970667358221220e5ec1d76350fefd310699fa371b4097a29ed08596e8af56e586678879f5ab7f264736f6c63430008030033",
  "deployedBytecode": "",
  "devdoc": {
    "details": "Responsible for enacting decisions related to sensitive TipJar parameters Decisions are made via a timelock contract",
    "kind": "dev",
    "methods": {
      "approveNewAdmin(address,bytes32)": {
        "params": {
          "newAdmin": "new admin address",
          "salt": "salt"
        }
      },
      "approveNewCriticalDelay(uint256,bytes32)": {
        "params": {
          "newDelay": "new delay time",
          "salt": "salt"
        }
      },
      "approveNewFee(uint32,bytes32)": {
        "params": {
          "newFee": "New fee",
          "salt": "salt"
        }
      },
      "approveNewFeeCollector(address,bytes32)": {
        "params": {
          "newFeeCollector": "New fee collector",
          "salt": "salt"
        }
      },
      "approveNewMinerSplit(address,address,uint32,bytes32)": {
        "params": {
          "minerAddress": "Address of miner",
          "salt": "salt",
          "splitPct": "% of tip that splitTo receives",
          "splitTo": "Address that receives split"
        }
      },
      "approveNewProxyAdmin(address,bytes32)": {
        "params": {
          "newAdmin": "new admin address",
          "salt": "salt"
        }
      },
      "approveNewRegularDelay(uint256,bytes32)": {
        "params": {
          "newDelay": "new delay time",
          "salt": "salt"
        }
      },
      "approveNewTimelock(address,bytes32)": {
        "params": {
          "newTimelock": "new timelock address",
          "salt": "salt"
        }
      },
      "approveNewTipJar(address,bytes32)": {
        "params": {
          "newTipJar": "new tip jar address",
          "salt": "salt"
        }
      },
      "approveUpgrade(address,bytes32)": {
        "params": {
          "newImplementation": "new implementation address",
          "salt": "salt"
        }
      },
      "approveUpgradeAndCall(address,bytes,uint256,bytes32)": {
        "params": {
          "data": "Bytes-encoded function to call",
          "newImplementation": "new implementation address",
          "salt": "salt",
          "value": "Amount of ETH to send on call"
        }
      },
      "cancelProposal(bytes32)": {
        "params": {
          "id": "ID of proposal"
        }
      },
      "createProposal(address,uint256,bytes,bytes32,bytes32)": {
        "params": {
          "data": "function call bytes",
          "predecessor": "predecessor function call",
          "salt": "salt used in proposal",
          "target": "target address",
          "value": "ETH value"
        }
      },
      "createProposalBatch(address[],uint256[],bytes[],bytes32,bytes32)": {
        "params": {
          "datas": "function call bytes",
          "predecessor": "predecessor function call",
          "salt": "salt used in proposal",
          "targets": "target address",
          "values": "ETH value"
        }
      },
      "executeProposal(address,uint256,bytes,bytes32,bytes32)": {
        "params": {
          "data": "function call bytes",
          "predecessor": "predecessor function call",
          "salt": "salt used in proposal",
          "target": "target address",
          "value": "ETH value"
        }
      },
      "executeProposalBatch(address[],uint256[],bytes[],bytes32,bytes32)": {
        "params": {
          "datas": "function call bytes",
          "predecessor": "predecessor function call",
          "salt": "salt used in proposal",
          "targets": "target address",
          "values": "ETH value"
        }
      },
      "initialize(address,address,address,uint256,uint256)": {
        "params": {
          "_admin": "Admin address",
          "_timelock": "TimelockController contract address",
          "_tipJar": "TipJar proxy contract address"
        }
      },
      "proposeNewAdmin(address,bytes32)": {
        "params": {
          "newAdmin": "new admin address",
          "salt": "salt"
        }
      },
      "proposeNewCriticalDelay(uint256,bytes32)": {
        "params": {
          "newDelay": "new delay time",
          "salt": "salt"
        }
      },
      "proposeNewFee(uint32,bytes32)": {
        "params": {
          "newFee": "New fee",
          "salt": "salt"
        }
      },
      "proposeNewFeeCollector(address,bytes32)": {
        "params": {
          "newFeeCollector": "New fee collector",
          "salt": "salt"
        }
      },
      "proposeNewMinerSplit(address,address,uint32,bytes32)": {
        "params": {
          "minerAddress": "Address of miner",
          "salt": "salt",
          "splitPct": "% of tip that splitTo receives",
          "splitTo": "Address that receives split"
        }
      },
      "proposeNewProxyAdmin(address,bytes32)": {
        "params": {
          "newAdmin": "new admin address",
          "salt": "salt"
        }
      },
      "proposeNewRegularDelay(uint256,bytes32)": {
        "params": {
          "newDelay": "new delay time",
          "salt": "salt"
        }
      },
      "proposeNewTimelock(address,bytes32)": {
        "params": {
          "newTimelock": "new timelock address",
          "salt": "salt"
        }
      },
      "proposeNewTipJar(address,bytes32)": {
        "params": {
          "newTipJar": "new tip jar address",
          "salt": "salt"
        }
      },
      "proposeUpgrade(address,bytes32)": {
        "params": {
          "newImplementation": "new implementation address",
          "salt": "salt"
        }
      },
      "proposeUpgradeAndCall(address,bytes,uint256,bytes32)": {
        "params": {
          "data": "Bytes-encoded function to call",
          "newImplementation": "new implementation address",
          "salt": "salt",
          "value": "Amount of ETH to send on call"
        }
      },
      "setAdmin(address)": {
        "details": "Can only be executed by Timelock contract",
        "params": {
          "newAdmin": "new admin address"
        }
      },
      "setCriticalDelay(uint256)": {
        "details": "Can only be executed by Timelock contract",
        "params": {
          "newDelay": "new delay time"
        }
      },
      "setProxyAdmin(address)": {
        "params": {
          "newAdmin": "new admin address"
        }
      },
      "setRegularDelay(uint256)": {
        "details": "Can only be executed by Timelock contract",
        "params": {
          "newDelay": "new delay time"
        }
      },
      "setTimelock(address)": {
        "details": "Can only be executed by Timelock contract or anyone if timelock has not yet been set",
        "params": {
          "newTimelock": "new timelock address"
        }
      },
      "setTipJar(address)": {
        "details": "Can only be executed by Timelock contract",
        "params": {
          "newTipJar": "new tip jar address"
        }
      },
      "upgrade(address)": {
        "params": {
          "newImplementation": "new implementation address"
        }
      },
      "upgradeAndCall(address,bytes)": {
        "params": {
          "data": "Bytes-encoded function to call",
          "newImplementation": "new implementation address"
        }
      }
    },
    "title": "TipJarManager",
    "version": 1
  },
  "userdoc": {
    "events": {
      "AdminChanged(address,address)": {
        "notice": "New admin event"
      },
      "DelayChanged(string,uint256,uint256)": {
        "notice": "New delay event"
      },
      "FeeApproval(address,uint32)": {
        "notice": "Fee Approval event"
      },
      "FeeCollectorApproval(address,address)": {
        "notice": "Fee Collector Approval event"
      },
      "FeeCollectorProposal(address,address,uint256,bytes32,bytes32)": {
        "notice": "Fee Collector Proposal event"
      },
      "FeeProposal(address,uint32,uint256,bytes32,bytes32)": {
        "notice": "Fee Proposal event"
      },
      "MinerSplitApproval(address,address,address,uint32)": {
        "notice": "Miner Split Approval event"
      },
      "MinerSplitProposal(address,address,address,uint32,uint256,bytes32,bytes32)": {
        "notice": "Miner Split Proposal event"
      },
      "TimelockChanged(address,address)": {
        "notice": "New timelock event"
      },
      "TipJarChanged(address,address)": {
        "notice": "New tip jar event"
      }
    },
    "kind": "user",
    "methods": {
      "admin()": {
        "notice": "TipJarManager admin"
      },
      "approveNewAdmin(address,bytes32)": {
        "notice": "Approve new admin for this contract"
      },
      "approveNewCriticalDelay(uint256,bytes32)": {
        "notice": "Approve new critical delay for this contract"
      },
      "approveNewFee(uint32,bytes32)": {
        "notice": "Approve a new network fee"
      },
      "approveNewFeeCollector(address,bytes32)": {
        "notice": "Approve a new fee collector"
      },
      "approveNewMinerSplit(address,address,uint32,bytes32)": {
        "notice": "Approve a new miner split"
      },
      "approveNewProxyAdmin(address,bytes32)": {
        "notice": "Approve new admin for TipJar proxy contract"
      },
      "approveNewRegularDelay(uint256,bytes32)": {
        "notice": "Approve new regular delay for this contract"
      },
      "approveNewTimelock(address,bytes32)": {
        "notice": "Approve new timelock contract"
      },
      "approveNewTipJar(address,bytes32)": {
        "notice": "Approve new tip jar contract"
      },
      "approveUpgrade(address,bytes32)": {
        "notice": "Approve new implementation for TipJar proxy"
      },
      "approveUpgradeAndCall(address,bytes,uint256,bytes32)": {
        "notice": "Approve new implementation for TipJar proxy + call function after"
      },
      "cancelProposal(bytes32)": {
        "notice": "Cancel proposal"
      },
      "constructor": {
        "notice": "Construct new TipJarManager contract, setting msg.sender as admin"
      },
      "createProposal(address,uint256,bytes,bytes32,bytes32)": {
        "notice": "Create proposal"
      },
      "createProposalBatch(address[],uint256[],bytes[],bytes32,bytes32)": {
        "notice": "Create batch proposal"
      },
      "criticalDelay()": {
        "notice": "Delay for critical changes"
      },
      "executeProposal(address,uint256,bytes,bytes32,bytes32)": {
        "notice": "Execute proposal"
      },
      "executeProposalBatch(address[],uint256[],bytes[],bytes32,bytes32)": {
        "notice": "Execute batch proposal"
      },
      "getProxyAdmin()": {
        "notice": "Public getter for TipJar Proxy admin address"
      },
      "getProxyImplementation()": {
        "notice": "Public getter for TipJar Proxy implementation contract address"
      },
      "initialize(address,address,address,uint256,uint256)": {
        "notice": "Initialize contract"
      },
      "proposeNewAdmin(address,bytes32)": {
        "notice": "Propose new admin for this contract"
      },
      "proposeNewCriticalDelay(uint256,bytes32)": {
        "notice": "Propose new critical delay for this contract"
      },
      "proposeNewFee(uint32,bytes32)": {
        "notice": "Propose a new network fee"
      },
      "proposeNewFeeCollector(address,bytes32)": {
        "notice": "Propose a new fee collector"
      },
      "proposeNewMinerSplit(address,address,uint32,bytes32)": {
        "notice": "Propose a new miner split"
      },
      "proposeNewProxyAdmin(address,bytes32)": {
        "notice": "Propose new admin for TipJar proxy contract"
      },
      "proposeNewRegularDelay(uint256,bytes32)": {
        "notice": "Propose new regular delay for this contract"
      },
      "proposeNewTimelock(address,bytes32)": {
        "notice": "Propose new timelock contract"
      },
      "proposeNewTipJar(address,bytes32)": {
        "notice": "Propose new tip jar contract"
      },
      "proposeUpgrade(address,bytes32)": {
        "notice": "Propose new implementation for TipJar proxy contract"
      },
      "proposeUpgradeAndCall(address,bytes,uint256,bytes32)": {
        "notice": "Propose new implementation for TipJar proxy contract + call function after"
      },
      "regularDelay()": {
        "notice": "Delay for non-critical changes"
      },
      "setAdmin(address)": {
        "notice": "Set new admin for this contract"
      },
      "setCriticalDelay(uint256)": {
        "notice": "Set new critical delay for this contract"
      },
      "setProxyAdmin(address)": {
        "notice": "Set new admin for TipJar proxy contract"
      },
      "setRegularDelay(uint256)": {
        "notice": "Set new regular delay for this contract"
      },
      "setTimelock(address)": {
        "notice": "Set new timelock contract"
      },
      "setTipJar(address)": {
        "notice": "Set new tip jar contract"
      },
      "timelock()": {
        "notice": "Timelock contract"
      },
      "tipJar()": {
        "notice": "TipJarProxy address"
      },
      "upgrade(address)": {
        "notice": "Set new implementation for TipJar proxy contract"
      },
      "upgradeAndCall(address,bytes)": {
        "notice": "Set new implementation for TipJar proxy contract + call function after"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3126,
        "contract": "contracts/TipJarManager.sol:TipJarManager",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 3129,
        "contract": "contracts/TipJarManager.sol:TipJarManager",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 589,
        "contract": "contracts/TipJarManager.sol:TipJarManager",
        "label": "admin",
        "offset": 2,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 592,
        "contract": "contracts/TipJarManager.sol:TipJarManager",
        "label": "criticalDelay",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 595,
        "contract": "contracts/TipJarManager.sol:TipJarManager",
        "label": "regularDelay",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 598,
        "contract": "contracts/TipJarManager.sol:TipJarManager",
        "label": "tipJar",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 602,
        "contract": "contracts/TipJarManager.sol:TipJarManager",
        "label": "timelock",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(ITimelockController)2244"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ITimelockController)2244": {
        "encoding": "inplace",
        "label": "contract ITimelockController",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}